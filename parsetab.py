
# /home/stbamb/Downloads/LexAndYacc/Micro/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '61FDB285337A631F6B77AEF35F845D59'
    
_lr_action_items = {'ADDOP':([1,3,4,6,9,10,11,13,14,15,18,20,21,22,23,27,28,29,36,38,39,41,42,],[3,3,3,-18,3,20,-19,-16,-19,20,3,3,-6,3,-17,20,-15,20,3,-5,-7,-8,20,]),'BEGIN':([0,],[1,]),'END':([1,7,9,12,19,21,38,39,41,],[-4,17,-4,-3,-2,-6,-5,-7,-8,]),'SEMICOLON':([6,10,11,13,14,23,28,29,30,34,],[-18,21,-19,-16,-19,-17,-15,38,39,41,]),'READ':([1,9,21,38,39,41,],[5,5,-6,-5,-7,-8,]),'ASSIGNMENT':([11,],[22,]),'INTLITERAL':([1,3,4,9,18,20,21,22,36,38,39,41,],[6,6,6,6,6,6,-6,6,6,-5,-7,-8,]),'WRITE':([1,9,21,38,39,41,],[8,8,-6,-5,-7,-8,]),'COMMA':([6,13,14,23,25,27,28,40,42,],[-18,-16,-19,-17,31,36,-15,31,36,]),'LPAREN':([1,3,4,5,8,9,18,20,21,22,36,38,39,41,],[4,4,4,16,18,4,4,4,-6,4,4,-5,-7,-8,]),'RPAREN':([6,13,14,15,23,24,25,26,27,28,32,33,35,37,40,42,43,44,],[-18,-16,-19,23,-17,30,-4,34,-4,-15,-11,-9,-12,-14,-4,-4,-10,-13,]),'ID':([1,3,4,9,16,18,20,21,22,31,36,38,39,41,],[11,14,14,11,25,14,14,-6,14,40,14,-5,-7,-8,]),'$end':([2,17,],[0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exprlst':([18,],[26,]),'statementlist':([1,9,],[7,19,]),'idlst':([16,],[24,]),'program':([0,],[2,]),'expressionlist':([27,42,],[35,44,]),'statement':([1,9,],[9,9,]),'expression':([1,3,4,9,18,20,22,36,],[10,13,15,10,27,28,29,42,]),'empty':([1,9,25,27,40,42,],[12,12,32,37,32,37,]),'idlist':([25,40,],[33,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BEGIN statementlist END','program',3,'p_program','MicroYacc.py',20),
  ('statementlist -> statement statementlist','statementlist',2,'p_statementlist_statement','MicroYacc.py',24),
  ('statementlist -> empty','statementlist',1,'p_statementlist_empty','MicroYacc.py',28),
  ('empty -> <empty>','empty',0,'p_empty','MicroYacc.py',32),
  ('statement -> ID ASSIGNMENT expression SEMICOLON','statement',4,'p_statement_assign','MicroYacc.py',36),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','MicroYacc.py',40),
  ('statement -> READ LPAREN idlst RPAREN SEMICOLON','statement',5,'p_statement_read','MicroYacc.py',44),
  ('statement -> WRITE LPAREN exprlst RPAREN SEMICOLON','statement',5,'p_statement_write','MicroYacc.py',48),
  ('idlst -> ID idlist','idlst',2,'p_idlst_id','MicroYacc.py',52),
  ('idlist -> COMMA ID idlist','idlist',3,'p_idlist_comma','MicroYacc.py',56),
  ('idlist -> empty','idlist',1,'p_idlist_empty','MicroYacc.py',60),
  ('exprlst -> expression expressionlist','exprlst',2,'p_exprlst_expression','MicroYacc.py',64),
  ('expressionlist -> COMMA expression expressionlist','expressionlist',3,'p_expressionlist_comma','MicroYacc.py',68),
  ('expressionlist -> empty','expressionlist',1,'p_expressionlist_empty','MicroYacc.py',72),
  ('expression -> expression ADDOP expression','expression',3,'p_expression_addop','MicroYacc.py',76),
  ('expression -> ADDOP expression','expression',2,'p_expression_uminus','MicroYacc.py',83),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','MicroYacc.py',87),
  ('expression -> INTLITERAL','expression',1,'p_expression_number','MicroYacc.py',91),
  ('expression -> ID','expression',1,'p_expression_name','MicroYacc.py',95),
]
